name: Solar System Workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
  unit-testing:
    name: Unit Testing
    strategy:
      matrix:
        nodejs_version: [18, 19, 20]
        operating_system: [ubuntu-latest, windows-latest]
        exclude:
          - nodejs_version: 18
            operating_system: windows-latest

    runs-on: $${{ matrix.operating_system }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Setup NodeJS Version ${{ matrix.nodejs_version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.nodejs_version }}
      
      - name: Install Dependencies
        run: npm install
      
      - name: Unit Testing on Linux
        if: runner.os == 'Linux'
        run: npm test

      - name: Unit Testing on Windows
        if: runner.os == 'Windows'
        run: 

      - name: Archive Test Result
        uses: actions/upload-artifact@v3
        with:
          name: archived-test-result-${{ matrix.operating_system }}-${{ matrix.nodejs_version }}
          path: coverage
          retention-days: 5

  code-coverage:
    name: Code Coverage

    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Setup NodeJS Version 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
      
      - name: Install Dependencies
        run: npm install
      
      - name: Unit Testing
        continue-on-error: true
        run: npm run coverage

      - name: Archive Test Result
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-result
          path: coverage
          retention-days: 5

    docker:
      name: Containerization
      runs-on: ubuntu-latest
      needs: [unit-testing, code-coverage]
      steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Dockerhub Login
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}